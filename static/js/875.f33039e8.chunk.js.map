{"version":3,"file":"static/js/875.f33039e8.chunk.js","mappings":"qOAmEA,UAtDgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnBC,GAAUN,EAAAA,EAAAA,IAAYO,EAAAA,IAC5BC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,EAAaC,KAAKC,KAAKlB,EAAKmB,OAASf,GAErCgB,GADclB,EAAO,GAAKE,EACFA,EA2B9B,OAzBAiB,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACX,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRV,EAAgBX,EAAKuB,MAAM,EAAGH,IAE5BL,EADEC,IAAed,GAAuB,IAAfc,EAK7B,GAAG,CAAChB,EAAME,EAAMkB,EAAUJ,KAE1BK,EAAAA,EAAAA,YAAU,WACJxB,EAAQsB,OAAS,IACC,IAAhBnB,EAAKmB,OACPK,EAAAA,OAAOC,QAAQ,mBACU,IAAhBzB,EAAKmB,OACdK,EAAAA,OAAOC,QAAQ,wBAEfD,EAAAA,OAAOC,QAAQ,WAADC,OAAY1B,EAAKmB,OAAM,UAG3C,GAAG,CAACnB,KAGF2B,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,KACXJ,EAAAA,EAAAA,MAAA,WAAAE,SAAA,CACGnB,EAAaS,OAAS,IAAKW,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAAChC,KAAMU,IAC1Cb,EAAQsB,OAAS,GAAqB,IAAhBnB,EAAKmB,SAC1BW,EAAAA,EAAAA,KAACG,aAAY,CAAAJ,SAAC,6GAKff,IAAkBgB,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,SAIpC,C","sources":["pages/Catalog.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { CarList, FilterForm, LoadMore } from 'components';\nimport { Container } from 'components/Layout/Layout.styled';\nimport {\n  selectCars,\n  selectCarsShown,\n  selectPage,\n  selectPerPage,\n} from 'redux/selectors';\nimport { Notify } from 'notiflix';\nimport { resetFilter } from 'redux/slice';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const allCars = useSelector(selectCars);\n  const cars = useSelector(selectCarsShown);\n  const page = useSelector(selectPage);\n  const perPage = useSelector(selectPerPage);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [isShowLoadMore, setIsShowLoadMore] = useState(false);\n  const totalPages = Math.ceil(cars.length / perPage);\n  const startIndex = (page - 1) * perPage;\n  const endIndex = startIndex + perPage;\n\n  useEffect(() => {\n    dispatch(resetFilter());\n  }, []);\n\n  useEffect(() => {\n    setFilteredCars(cars.slice(0, endIndex));\n    if (totalPages === page || totalPages === 0) {\n      setIsShowLoadMore(false);\n    } else {\n      setIsShowLoadMore(true);\n    }\n  }, [cars, page, endIndex, totalPages]);\n\n  useEffect(() => {\n    if (allCars.length > 0) {\n      if (cars.length === 0) {\n        Notify.success(`Founded nothing`);\n      } else if (cars.length === 1) {\n        Notify.success(`Founded just one car`);\n      } else {\n        Notify.success(`Founded ${cars.length} cars`);\n      }\n    }\n  }, [cars]);\n\n  return (\n    <Container>\n      <FilterForm />\n      <section>\n        {filteredCars.length > 0 && <CarList cars={filteredCars} />}\n        {allCars.length > 0 && cars.length === 0 && (\n          <EmptySection>\n            No cars were found for this filter. Try a different filter or select\n            empty rows to see the entire range.\n          </EmptySection>\n        )}\n        {isShowLoadMore && <LoadMore />}\n      </section>\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["dispatch","useDispatch","allCars","useSelector","selectCars","cars","selectCarsShown","page","selectPage","perPage","selectPerPage","_useState","useState","_useState2","_slicedToArray","filteredCars","setFilteredCars","_useState3","_useState4","isShowLoadMore","setIsShowLoadMore","totalPages","Math","ceil","length","endIndex","useEffect","resetFilter","slice","Notify","success","concat","_jsxs","Container","children","_jsx","FilterForm","CarList","EmptySection","LoadMore"],"sourceRoot":""}